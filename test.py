#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤–∏–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—ñ Mod Manager
–ó–∞–ø—É—Å–∫–∞—î –±–∞–∑–æ–≤—ñ —Ç–µ—Å—Ç–∏ –±–µ–∑ GUI
"""

import sys
import os
from pathlib import Path

# –î–æ–¥–∞—î–º–æ src –¥–æ PYTHONPATH
sys.path.insert(0, str(Path(__file__).parent))

print("üß™ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è Mod Manager...")
print("=" * 50)

# –¢–µ—Å—Ç 1: –Ü–º–ø–æ—Ä—Ç –º–æ–¥—É–ª—ñ–≤
print("\n1Ô∏è‚É£ –¢–µ—Å—Ç —ñ–º–ø–æ—Ä—Ç—É –º–æ–¥—É–ª—ñ–≤...")
try:
    from src.core.file_operations import create_symlink, is_symlink, remove_symlink
    from src.core.mod_manager import ModManager
    from src.utils.config import ConfigManager
    print("‚úÖ –í—Å—ñ –º–æ–¥—É–ª—ñ —ñ–º–ø–æ—Ä—Ç–æ–≤–∞–Ω—ñ —É—Å–ø—ñ—à–Ω–æ")
except ImportError as e:
    print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ —ñ–º–ø–æ—Ä—Ç—É: {e}")
    sys.exit(1)

# –¢–µ—Å—Ç 2: ConfigManager
print("\n2Ô∏è‚É£ –¢–µ—Å—Ç ConfigManager...")
try:
    config = ConfigManager("test_config.json")
    default_config = config.get_default_config()
    print(f"‚úÖ –î–µ—Ñ–æ–ª—Ç–Ω–∞ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è: {len(default_config)} –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ–≤")
    
    # Cleanup
    if Path("test_config.json").exists():
        Path("test_config.json").unlink()
except Exception as e:
    print(f"‚ùå –ü–æ–º–∏–ª–∫–∞: {e}")

# –¢–µ—Å—Ç 3: File Operations (—Å–∏–º—É–ª—è—Ü—ñ—è)
print("\n3Ô∏è‚É£ –¢–µ—Å—Ç –æ–ø–µ—Ä–∞—Ü—ñ–π –∑ —Ñ–∞–π–ª–∞–º–∏...")
try:
    # –°—Ç–≤–æ—Ä—é—î–º–æ —Ç–µ—Å—Ç–æ–≤—ñ –ø–∞–ø–∫–∏
    test_dir = Path("test_mods")
    test_dir.mkdir(exist_ok=True)
    
    test_mod = test_dir / "TestMod"
    test_mod.mkdir(exist_ok=True)
    
    # –°—Ç–≤–æ—Ä—é—î–º–æ —Ç–µ—Å—Ç–æ–≤–∏–π —Ñ–∞–π–ª
    test_file = test_mod / "test.txt"
    test_file.write_text("Test mod content")
    
    print(f"‚úÖ –°—Ç–≤–æ—Ä–µ–Ω–æ —Ç–µ—Å—Ç–æ–≤—É —Å—Ç—Ä—É–∫—Ç—É—Ä—É: {test_mod}")
    
    # Cleanup
    import shutil
    if test_dir.exists():
        shutil.rmtree(test_dir)
    
except Exception as e:
    print(f"‚ùå –ü–æ–º–∏–ª–∫–∞: {e}")

# –¢–µ—Å—Ç 4: ModManager (–±–∞–∑–æ–≤–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è)
print("\n4Ô∏è‚É£ –¢–µ—Å—Ç ModManager...")
try:
    manager = ModManager("", "")
    valid, msg = manager.validate_paths()
    print(f"‚úÖ ModManager —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ (–≤–∞–ª—ñ–¥–∞—Ü—ñ—è –æ—á—ñ–∫—É–≤–∞–Ω–æ –Ω–µ –ø—Ä–æ–π—à–ª–∞)")
except Exception as e:
    print(f"‚ùå –ü–æ–º–∏–ª–∫–∞: {e}")

# –¢–µ—Å—Ç 5: –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π –¥–ª—è GUI
print("\n5Ô∏è‚É£ –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ GUI –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π...")
try:
    import customtkinter as ctk
    print(f"‚úÖ CustomTkinter –≤–µ—Ä—Å—ñ—è: {ctk.__version__}")
except ImportError:
    print("‚ö†Ô∏è  CustomTkinter –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")
    print("   –í—Å—Ç–∞–Ω–æ–≤—ñ—Ç—å: pip install customtkinter")

try:
    from PIL import Image
    print(f"‚úÖ Pillow –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")
except ImportError:
    print("‚ö†Ô∏è  Pillow –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")
    print("   –í—Å—Ç–∞–Ω–æ–≤—ñ—Ç—å: pip install Pillow")

# –ü—ñ–¥—Å—É–º–æ–∫
print("\n" + "=" * 50)
print("‚úÖ –ë–∞–∑–æ–≤–µ —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
print("\nüí° –î–ª—è –∑–∞–ø—É—Å–∫—É –ø—Ä–æ–≥—Ä–∞–º–∏:")
print("   python3 src/main.py")
print("   –∞–±–æ")
print("   ./run.sh")
